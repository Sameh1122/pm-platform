datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String?
  status    String    @default("pending")
  createdAt DateTime  @default(now())

  userRoles   UserRole[]
  projects    Project[]   @relation("UserProjects")
  assignments Assignment[]
  // NEW:
  userPerms   UserPermission[]
}

model Role {
  id              Int   @id @default(autoincrement())
  name            String @unique
  permissions     RolePermission[]
  users           UserRole[]
  assignments     Assignment[]
  canAssign       RoleAssignable[] @relation("ManagerToTarget")
  canBeAssignedBy RoleAssignable[] @relation("TargetOfManager")
}

model Permission {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?
  roles       RolePermission[]
  userPerms   UserPermission[]
}

model UserPermission {
  id           Int @id @default(autoincrement())
  userId       Int
  permissionId Int
  user         User        @relation(fields: [userId], references: [id])
  permission   Permission  @relation(fields: [permissionId], references: [id])

  @@unique([userId, permissionId], name: "userId_permissionId")
}

model RolePermission {
  id           Int @id @default(autoincrement())
  roleId       Int
  permissionId Int
  role         Role        @relation(fields: [roleId], references: [id])
  permission   Permission  @relation(fields: [permissionId], references: [id])

  @@unique([roleId, permissionId], name: "roleId_permissionId")
}

model UserRole {
  id     Int  @id @default(autoincrement())
  userId Int
  roleId Int
  user   User @relation(fields: [userId], references: [id])
  role   Role @relation(fields: [roleId], references: [id])
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  methodology String   // "waterfall" | "agile"
  ownerId     Int
  owner       User     @relation("UserProjects", fields: [ownerId], references: [id])
  createdAt   DateTime @default(now())

  assignments Assignment[]
}

model Assignment {
  id        Int @id @default(autoincrement())
  projectId Int
  userId    Int
  roleId    Int

  project   Project @relation(fields: [projectId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
  role      Role    @relation(fields: [roleId], references: [id])

  @@unique([projectId, userId, roleId])
}

model RoleAssignable {
  id             Int  @id @default(autoincrement())
  managerRoleId  Int
  targetRoleId   Int

  managerRole    Role @relation("ManagerToTarget", fields: [managerRoleId], references: [id])
  targetRole     Role @relation("TargetOfManager", fields: [targetRoleId], references: [id])

  @@unique([managerRoleId, targetRoleId], name: "manager_target_unique")
}
